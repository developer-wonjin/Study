DROP TABLE 월요금납부실적 PURGE;

CREATE TABLE 월요금납부실적
AS
SELECT TO_CHAR(OBJECT_ID) 고객번호
     , '200903' 납입월
     , round(dbms_random.value(1000, 10000), -2) 지로
     , round(dbms_random.value(1000, 10000), -2) 자동이체
     , round(dbms_random.value(1000, 10000), -2) 신용카드
     , round(dbms_random.value(1000, 10000), -2) 핸드폰
     , round(dbms_random.value(1000, 10000), -2) 인터넷
FROM   ALL_OBJECTS 
WHERE ROWNUM <= 30000;

DROP TABLE 납입방법별_월요금집계 PURGE;

CREATE TABLE 납입방법별_월요금집계 (
  고객번호      NUMBER
, 납입월        VARCHAR2(6)
, 납입방법코드  VARCHAR2(1)
, 납입금액       NUMBER
) ;


########################################################################################################
import java.io.*;
import java.lang.*;
import java.util.*;
import java.net.*;
import java.sql.*;
import oracle.jdbc.driver.*;

public class JavaLoopQuery{
  public static void insertData( Connection con
                               , String param1
                               , String param2
                               , String param3
                               , long param4) throws Exception{
    String SQLStmt = "INSERT INTO 납입방법별_월요금집계  " 
            + "(고객번호, 납입월, 납입방법코드, 납입금액) "
            + "VALUES(?, ?, ?, ?)";
    PreparedStatement st = con.prepareStatement(SQLStmt);
    st.setString(1, param1);
    st.setString(2, param2);
    st.setString(3, param3);
    st.setLong(4, param4);
    st.execute();
    st.close();

  }

  public static void execute(Connection con, String input_month) 
  throws Exception {
    String SQLStmt = "SELECT 고객번호, 납입월"
                   + "     , 지로, 자동이체, 신용카드, 핸드폰, 인터넷 "
                   + "FROM   월요금납부실적 "
                   + "WHERE  납입월 = ?";
    PreparedStatement stmt = con.prepareStatement(SQLStmt);
    stmt.setString(1, input_month);
    ResultSet rs = stmt.executeQuery();
    while(rs.next()){
      String 고객번호 = rs.getString(1);
      String 납입월 = rs.getString(2);
      long 지로 = rs.getLong(3);
      long 자동이체 = rs.getLong(4);
      long 신용카드 = rs.getLong(5);
      long 핸드폰 = rs.getLong(6);
      long 인터넷 = rs.getLong(7);
      if(지로 > 0)     insertData (con, 고객번호, 납입월, "A", 지로);
      if(자동이체 > 0) insertData (con, 고객번호, 납입월, "B", 자동이체);
      if(신용카드 > 0) insertData (con, 고객번호, 납입월, "C", 신용카드);
      if(핸드폰 > 0)   insertData (con, 고객번호, 납입월, "D", 핸드폰);
      if(인터넷 > 0)   insertData (con, 고객번호, 납입월, "E", 인터넷);
    }
    rs.close();
    stmt.close();
  }

  public static void main(String[] args) throws Exception{

    long btm = System.currentTimeMillis();

    Connection con = getConnection();

    execute(con, "200903");

    System.out.println("elapsed time : " + (System.currentTimeMillis() - btm));

    releaseConnection(con);
  }

  public static Connection getConnection() throws Exception{
    String DB_CON     = "jdbc:oracle:thin:@localhost:1521:ora10g";
    String DB_USER    = "scott";
    String DB_PASS    = "tiger";

    DriverManager.registerDriver(new OracleDriver());
    Connection con = DriverManager.getConnection(DB_CON,DB_USER,DB_PASS);

    return con;
  }

  public static void releaseConnection(Connection con) throws Exception{
    con.commit();
    con.close();
  }
}

########################################################################################################

