DROP TABLE 체결 PURGE;

CREATE TABLE 체결(체결일자, 체결번호, 시장코드, 증권그룹코드, 체결수량, 체결금액)
NOLOGGING
AS
SELECT '20090315'
     , ROWNUM 
     , DECODE(SIGN(ROWNUM-100000), 1, 'ST', 'KQ')        -- 유가증권, 코스닥 
     , DECODE(MOD(ROWNUM, 8), 0, 'SS', 1, 'EF', 2, 'EW'  -- 주식, ETF, ELW
                            , 3, 'DR', 4, 'SW', 5, 'RT'  -- DR, 신주인수권, 리츠
                            , 6, 'BC', 7, 'MF')          -- 수익증권, 투자회사
     , ROUND(DBMS_RANDOM.VALUE(10, 1000), -1) 
     , ROUND(DBMS_RANDOM.VALUE(10000, 1000000), -2) 
FROM   DUAL
CONNECT BY LEVEL <= 500000
UNION ALL
SELECT '20090315'
     , ROWNUM + 300000 
     ,(CASE WHEN MOD(ROWNUM, 4) < 2 THEN 'SD' ELSE 'GD' END)
     ,(CASE WHEN MOD(ROWNUM, 4) IN (0, 2) THEN 'FU' ELSE 'OP' END)
     , ROUND(DBMS_RANDOM.VALUE(10, 1000), -1) 
     , ROUND(DBMS_RANDOM.VALUE(10000, 1000000), -2) 
FROM   DUAL
CONNECT BY LEVEL <= 500000
;


CREATE OR REPLACE FUNCTION SF_상품분류(시장코드 VARCHAR2, 증권그룹코드 VARCHAR2) 
RETURN VARCHAR2
IS
  L_분류 VARCHAR2(20);
BEGIN
  IF 시장코드 IN ('ST', 'KQ') THEN  -- 유가증권, 코스닥
    IF 증권그룹코드 = 'SS' THEN 
      L_분류 := '주식 현물';
    ELSIF 증권그룹코드 IN ('EF', 'EW') THEN  -- ETF, ELW
      L_분류 := '파생';
    ELSE 
      L_분류 := '주식외 현물';
    END IF;
  ELSE  
     L_분류 := '파생';
  END IF;
  
  --SELECT 순서 || '. ' || L_분류 INTO L_분류 
  --FROM   분류순서
  --WHERE  분류명 = L_분류;
  
  RETURN L_분류;
END;
/


COLUMN 상품분류 FORMAT A15
COLUMN 체결건수 FORMAT 99999999
COLUMN 체결수량 FORMAT 9999999999
COLUMN 체결금액 FORMAT 9999999999999

SET TIMING ON


SELECT SF_상품분류(시장코드, 증권그룹코드) 상품분류
     , COUNT(*) 체결건수
     , SUM(체결수량) 체결수량
     , SUM(체결금액) 체결금액
FROM   체결
WHERE  체결일자 = '20090315'
GROUP BY SF_상품분류(시장코드, 증권그룹코드)
ORDER BY 1 ;


SELECT CASE
       WHEN 시장코드 IN ('ST', 'KQ') AND 증권그룹코드  = 'SS' THEN '주식 현물'
       WHEN 시장코드 IN ('ST', 'KQ') AND 증권그룹코드 NOT IN ('SS', 'EF', 'EW') THEN '주식외 현물'
       WHEN 시장코드 IN ('SD', 'GD') OR 증권그룹코드 IN ('EF', 'EW') THEN '파생'
       END 상품분류
     , COUNT(*) 체결건수
     , SUM(체결수량) 체결수량
     , SUM(체결금액) 체결금액
FROM   체결
WHERE  체결일자 = '20090315'
GROUP BY 
       CASE
       WHEN 시장코드 IN ('ST', 'KQ') AND 증권그룹코드  = 'SS' THEN '주식 현물'
       WHEN 시장코드 IN ('ST', 'KQ') AND 증권그룹코드 NOT IN ('SS', 'EF', 'EW') THEN '주식외 현물'
       WHEN 시장코드 IN ('SD', 'GD') OR 증권그룹코드 IN ('EF', 'EW') THEN '파생'
       END
ORDER BY 1 ;


SELECT DECODE( 시장코드||증권그룹코드
             , 'STSS', '주식 현물'
             , 'KQSS', '주식 현물'
             , 'SDFU', '파생'
             , 'SDOP', '파생'
             , 'GDFU', '파생'
             , 'GDOP', '파생'
             , 'STEF', '파생'
             , 'STEW', '파생'
             , 'KQEF', '파생'
             , 'KQEW', '파생'
             , '주식외 현물' ) 상품분류
     , COUNT(*) 체결건수
     , SUM(체결수량) 체결수량
     , SUM(체결금액) 체결금액
FROM   체결
WHERE  체결일자 = '20090315'
GROUP BY 
       DECODE( 시장코드||증권그룹코드
             , 'STSS', '주식 현물'
             , 'KQSS', '주식 현물'
             , 'SDFU', '파생'
             , 'SDOP', '파생'
             , 'GDFU', '파생'
             , 'GDOP', '파생'
             , 'STEF', '파생'
             , 'STEW', '파생'
             , 'KQEF', '파생'
             , 'KQEW', '파생'
             , '주식외 현물' )
ORDER BY 1 ;



                     
DROP TABLE 분류순서 PURGE;

CREATE TABLE 분류순서(분류명, 순서)
AS
SELECT '주식 현물', 1 FROM DUAL
UNION ALL
SELECT '주식외 현물', 2 FROM DUAL
UNION ALL
SELECT '파생', 3 FROM DUAL ;


-- SF_상품분류 함수에서 주석 제거
CREATE OR REPLACE FUNCTION SF_상품분류(시장코드 IN VARCHAR2, 증권그룹코드 IN VARCHAR2) 
RETURN VARCHAR2
IS
  L_분류 VARCHAR2(14);
BEGIN
  IF 시장코드 IN ('ST', 'KQ') THEN
    IF 증권그룹코드 = 'SS' THEN 
      L_분류 := '주식 현물';
    ELSIF 증권그룹코드 IN ('EF', 'EW') THEN 
      L_분류 := '파생';
    ELSE 
      L_분류 := '주식외 현물';
    END IF;
  ELSE  
     L_분류 := '파생';
  END IF;
  
  SELECT 순서 || '. ' || L_분류 INTO L_분류 
  FROM   분류순서
  WHERE  분류명 = L_분류;
  
  RETURN L_분류;
END;
/


SELECT SF_상품분류('ST','SS') FROM DUAL
UNION ALL
SELECT SF_상품분류('ST','SW') FROM DUAL
UNION ALL
SELECT SF_상품분류('ST','EF') FROM DUAL ;



SELECT SF_상품분류(시장코드, 증권그룹코드) 상품분류
     , COUNT(*) 체결건수
     , SUM(체결수량) 체결수량
     , SUM(체결금액) 체결금액
FROM   체결
WHERE  체결일자 = '20090315'
GROUP BY SF_상품분류(시장코드, 증권그룹코드)
ORDER BY 1 ;




SELECT DECODE( 시장코드||증권그룹코드
             , 'STSS', '1. 주식 현물'
             , 'KQSS', '1. 주식 현물'
             , 'SDFU', '3. 파생'
             , 'SDOP', '3. 파생'
             , 'GDFU', '3. 파생'
             , 'GDOP', '3. 파생'
             , 'STEF', '3. 파생'
             , 'STEW', '3. 파생'
             , 'KQEF', '3. 파생'
             , 'KQEW', '3. 파생'
             , '2. 주식외 현물' ) 분류명
     , COUNT(*) 체결건수
     , SUM(체결수량) 체결수량
     , SUM(체결금액) 체결금액
FROM   체결
WHERE  체결일자 = '20090315'
GROUP BY 
       DECODE( 시장코드||증권그룹코드
             , 'STSS', '1. 주식 현물'
             , 'KQSS', '1. 주식 현물'
             , 'SDFU', '3. 파생'
             , 'SDOP', '3. 파생'
             , 'GDFU', '3. 파생'
             , 'GDOP', '3. 파생'
             , 'STEF', '3. 파생'
             , 'STEW', '3. 파생'
             , 'KQEF', '3. 파생'
             , 'KQEW', '3. 파생'
             , '2. 주식외 현물' )
ORDER BY 1 ;



DROP TABLE 상품분류 PURGE;

CREATE TABLE 상품분류(시장코드, 증권그룹코드, 분류명)
AS
SELECT 'ST', 'SS', '주식 현물'    FROM DUAL UNION ALL
SELECT 'ST', 'EF', '파생'         FROM DUAL UNION ALL
SELECT 'ST', 'EW', '파생'         FROM DUAL UNION ALL
SELECT 'ST', 'DR', '주식외 현물'  FROM DUAL UNION ALL
SELECT 'ST', 'SW', '주식외 현물'  FROM DUAL UNION ALL
SELECT 'ST', 'RT', '주식외 현물'  FROM DUAL UNION ALL
SELECT 'ST', 'BC', '주식외 현물'  FROM DUAL UNION ALL
SELECT 'ST', 'MF', '주식외 현물'  FROM DUAL UNION ALL
SELECT 'KQ', 'SS', '주식 현물'    FROM DUAL UNION ALL
SELECT 'KQ', 'EF', '파생'         FROM DUAL UNION ALL
SELECT 'KQ', 'EW', '파생'         FROM DUAL UNION ALL
SELECT 'KQ', 'DR', '주식외 현물'  FROM DUAL UNION ALL
SELECT 'KQ', 'SW', '주식외 현물'  FROM DUAL UNION ALL
SELECT 'KQ', 'RT', '주식외 현물'  FROM DUAL UNION ALL
SELECT 'KQ', 'BC', '주식외 현물'  FROM DUAL UNION ALL
SELECT 'KQ', 'MF', '주식외 현물'  FROM DUAL UNION ALL
SELECT 'SD', 'FU', '파생'         FROM DUAL UNION ALL
SELECT 'SD', 'OP', '파생'         FROM DUAL UNION ALL
SELECT 'GD', 'FU', '파생'         FROM DUAL UNION ALL
SELECT 'GD', 'OP', '파생'         FROM DUAL ;

       
ALTER TABLE 상품분류 ADD 
CONSTRAINT 상품분류_PK PRIMARY KEY(시장코드, 증권그룹코드);
       
       
SELECT C.순서 || '. ' || B.분류명 상품분류 
     , SUM(체결건수) 체결건수
     , SUM(체결수량) 체결수량
     , SUM(체결금액) 체결금액
FROM (SELECT 시장코드, 증권그룹코드
           , COUNT(*) 체결건수
           , SUM(체결수량) 체결수량
           , SUM(체결금액) 체결금액
      FROM   체결
      WHERE  체결일자 = '20090315'
      GROUP BY 시장코드, 증권그룹코드) A, 상품분류 B, 분류순서 C
WHERE A.시장코드 = B.시장코드
AND   A.증권그룹코드 = B.증권그룹코드
AND   C.분류명 = B.분류명
GROUP BY C.순서 || '. ' || B.분류명
ORDER BY 1 ;


-- 함수를 풀 수 없을 때 

SELECT SUM(DECODE(SF_상품분류(시장코드, 증권그룹코드), '1. 주식 현물', 체결수량))    "주식현물_체결수량"   
     , SUM(DECODE(SF_상품분류(시장코드, 증권그룹코드), '2. 주식외 현물', 체결수량))  "주식외현물_체결수량" 
     , SUM(DECODE(SF_상품분류(시장코드, 증권그룹코드), '3. 파생', 체결수량))         "파생_체결수량"       
FROM   체결
WHERE  체결일자 = '20090315' ;


SELECT SUM(DECODE(상품분류, '1. 주식 현물'  , 체결수량)) "주식현물_체결수량"    
     , SUM(DECODE(상품분류, '2. 주식외 현물', 체결수량)) "주식외현물_체결수량" 
     , SUM(DECODE(상품분류, '3. 파생'       , 체결수량)) "파생_체결수량"       
FROM (
  SELECT SF_상품분류(시장코드, 증권그룹코드) 상품분류
       , 체결수량 
  FROM   체결
  WHERE  체결일자 = '20090315'
) ;


SELECT SUM(DECODE(상품분류, '1. 주식 현물'  , 체결수량)) "주식현물_체결수량"    
     , SUM(DECODE(상품분류, '2. 주식외 현물', 체결수량)) "주식외현물_체결수량" 
     , SUM(DECODE(상품분류, '3. 파생'       , 체결수량)) "파생_체결수량"       
FROM (
  SELECT /*+ NO_MERGE */ SF_상품분류(시장코드, 증권그룹코드) 상품분류
       , 체결수량 
  FROM   체결
  WHERE  체결일자 = '20090315'
) ;

SELECT SUM(DECODE(상품분류, '1. 주식 현물'  , 체결수량)) "주식현물_체결수량"    
     , SUM(DECODE(상품분류, '2. 주식외 현물', 체결수량)) "주식외현물_체결수량" 
     , SUM(DECODE(상품분류, '3. 파생'       , 체결수량)) "파생_체결수량"       
FROM (
  SELECT ROWNUM, SF_상품분류(시장코드, 증권그룹코드) 상품분류
       , 체결수량 
  FROM   체결
  WHERE  체결일자 = '20090315'
) ;


SELECT SUM(DECODE(상품분류, '1. 주식 현물'  , 체결수량)) "주식현물_체결수량"    
     , SUM(DECODE(상품분류, '2. 주식외 현물', 체결수량)) "주식외현물_체결수량" 
     , SUM(DECODE(상품분류, '3. 파생'       , 체결수량)) "파생_체결수량"       
FROM (
  SELECT SF_상품분류(시장코드, 증권그룹코드) 상품분류
       , 체결수량 
  FROM   체결
  WHERE  체결일자 = '20090315'
  AND    ROWNUM > 0
) ;

  

  
SELECT SUM(DECODE(상품분류, '1. 주식 현물'  , 체결수량)) "주식현물_체결수량"    
     , SUM(DECODE(상품분류, '2. 주식외 현물', 체결수량)) "주식외현물_체결수량" 
     , SUM(DECODE(상품분류, '3. 파생'       , 체결수량)) "파생_체결수량"       
FROM (
  SELECT /*+ NO_MERGE */ 
        (SELECT SF_상품분류(시장코드, 증권그룹코드) FROM DUAL) 상품분류
       , 체결수량 
  FROM   체결
  WHERE  체결일자 = '20090315'
) ;

ALTER SESSION SET "_query_execution_cache_max_size" = 2097152;

SELECT SUM(DECODE(상품분류, '1. 주식 현물'  , 체결수량)) "주식현물_체결수량" 
     , SUM(DECODE(상품분류, '2. 주식외 현물', 체결수량)) "주식외현물_체결수량"
     , SUM(DECODE(상품분류, '3. 파생'       , 체결수량)) "파생_체결수량"
FROM (
  SELECT /*+ NO_MERGE */ 
        (SELECT SF_상품분류(시장코드, 증권그룹코드) FROM DUAL) 상품분류
       , 체결수량 
  FROM   체결 
  WHERE  체결일자 = '20090315'
) ;


