-- 통과함
SELECT
      A.REST_ID
    , A.REST_NAME
    , A.FOOD_TYPE
    , A.FAVORITES
    , A.ADDRESS
    , ROUND(AVG(B.REVIEW_SCORE), 2) SCORE
FROM REST_INFO  A, REST_REVIEW  B
WHERE A.REST_ID = B.REST_ID
AND A.ADDRESS LIKE '서울%'
GROUP BY
      A.REST_ID
    , A.REST_NAME
    , A.FOOD_TYPE
    , A.FAVORITES
    , A.ADDRESS
ORDER BY 6 DESC, 4 DESC


SELECT  I.REST_ID, I.REST_NAME, I.FOOD_TYPE, I.FAVORITES, I.ADDRESS, ROUND(AVG(R.REVIEW_SCORE),2) AS SCORE
FROM    REST_INFO I, REST_REVIEW R
WHERE   1=1
AND     I.REST_ID=R.REST_ID -- 리뷰가 존재하는 식당만 조인에 성공해서 결과집합에 포함됨
AND     I.ADDRESS LIKE '서울%'
GROUP BY I.REST_ID, I.REST_NAME, I.FOOD_TYPE, I.FAVORITES, I.ADDRESS
ORDER BY SCORE DESC, I.FAVORITES DESC 
;



-- 통과못함
SELECT 
      A.REST_ID
    , A.REST_NAME
    , A.FOOD_TYPE
    , A.FAVORITES
    , A.ADDRESS
    , COALESCE(
        (SELECT ROUND(AVG(B.REVIEW_SCORE), 2) FROM REST_REVIEW B WHERE B.REST_ID = A.REST_ID GROUP BY B.REST_ID)
        ,0) SCORE
FROM REST_INFO A
WHERE A.ADDRESS LIKE '서울%'
ORDER BY 6 DESC, 4 DESC