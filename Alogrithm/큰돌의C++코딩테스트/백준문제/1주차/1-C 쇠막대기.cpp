#include<bits/stdc++.h>

using namespace std;
/*
여러 개의 쇠막대기를 레이저로 절단하려고 한다. 효율적인 작업을 위해서 쇠막대기를 아래에서 위로 겹쳐 놓고, 레이저를 위에서 수직으로 발사하여 쇠막대기들을 자른다. 쇠막대기와 레이저의 배치는 다음 조건을 만족한다.

쇠막대기는 자신보다 긴 쇠막대기 위에만 놓일 수 있다. 
- 쇠막대기를 다른 쇠막대기 위에 놓는 경우 완전히 포함되도록 놓되, 끝점은 겹치지 않도록 놓는다.
- 각 쇠막대기를 자르는 레이저는 적어도 하나 존재한다.
- 레이저는 어떤 쇠막대기의 양 끝점과도 겹치지 않는다.

레이저 ‘( )’

쇠막대기의 왼쪽 끝은 여는 괄호 ‘ ( ’ 로, 오른쪽 끝은 닫힌 괄호 ‘) ’ 로 표현된다.

쇠막대기는 레이저에 의해 몇 개의 조각으로 잘려지는데, 
위 예에서 가장 위에 있는 두 개의 쇠막대기는 각각 3개와 2개의 조각으로 잘려지고, 
이와 같은 방식으로 주어진 쇠막대기들은 총 17개의 조각으로 잘려진다.

쇠막대기와 레이저의 배치를 나타내는 괄호 표현이 주어졌을 때, 
잘려진 쇠막대기 조각의 총 개수를 구하는 프로그램을 작성하시오.

예1)
입력 ()(((()())(())()))(())
출력 17

예2)
입력 (((()(()()))(())()))(()())
출력 24


*/

string str;
stack<char> stk;
int tot;
int main() {
    ios::sync_with_stdio(0); cin.tie(0);
//입력
//한 줄에 쇠막대기와 레이저의 배치를 나타내는 괄호 표현이 공백없이 주어진다. 괄호 문자의 개수는 최대 100,000이다.
    cin >> str;

    for (int i = 0; i < str.size(); i++) {
        char& ch = str[i];
        if (ch == '(') stk.push(ch);
        else {
            if (str[i-1] == '(') {
                stk.pop(); tot += stk.size();
            } else {
                stk.pop(); tot++;
            }
        }
    }

//출력
//잘려진 조각의 총 개수를 나타내는 정수를 한 줄에 출력한다.
    cout << tot;
    return 0;
}