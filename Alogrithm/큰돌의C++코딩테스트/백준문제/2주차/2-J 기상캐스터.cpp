// https://www.acmicpc.net/problem/10709

#include<bits/stdc++.h>

using namespace std;
/*
시간 제한	메모리 제한	제출	정답	맞힌 사람	정답 비율
1 초	256 MB	7802	5867	4609	75.188%
문제
남북방향이 H 킬로미터, 
동서방향이 W 킬로미터인 직사각형 모양이다. 

각 구역의 하늘에는 구름이 있을 수도, 없을 수도 있다. 
- 모든 구름은 1분이 지날 때마다 1킬로미터씩 동쪽으로 이동한다. 


지금 각 구역의 하늘에 구름이 있는지 없는지를 알고 있다. 
기상청에서 일하고 있는 여러분은 각 구역에 대해서 지금부터 몇 분뒤 처음으로 하늘에 구름이 오는지를 예측하는 일을 맡았다.

각 구역에 대해서 지금부터 몇 분뒤 처음으로 하늘에 구름이 오는지를 구하여라.

입력
입력은 1 + H 행으로 주어진다.

첫 번째 행에는 정수 H, W (1 ≦ H ≦ 100, 1 ≦ W ≦ 100) 가 공백을 사이에 주고 주어진다. 이것은 JOI시가 H × W 개의 작은 구역으로 나뉘어 있다는 것을 의미한다.

이어진 H 개의 행의 i번째 행 (1 ≦ i ≦ H) 에는 W문자의 문자열이 주어진다. 
W 개의 문자 중 j번째 문자 (1 ≦ j ≦ W) 는, 구역 (i, j) 에 지금 구름이 떠 있는지 아닌지를 나타낸다. 
구름이 있는 경우에는 영어 소문자 'c' 가, 
구름이 없는 경우에는 문자 '.' 가 주어진다.

출력
출력은 H 행으로, 각 행에는 공백으로 구분된 W 개의 정수를 출력한다. 
출력의 i 번째 행 j 번째 정수 (1 ≦ i ≦ H, 1 ≦ j ≦ W) 는, 지금부터 몇 분후에 처음으로 구역 (i, j) 에 구름이 뜨는지를 표시한다. 
단, 처음부터 구역 (i, j) 에 구름이 떠 있었던 경우에는 0을, 몇 분이 지나도 구름이 뜨지 않을 경우에는 -1을 출력한다.

예제 입력 1 
3 4
c..c
..c.
....

예제 출력 1 
0   1  2  0
-1 -1  0  1
-1 -1 -1 -1


예제 입력 2 
6 8
.c......
........
.ccc..c.
....c...
..c.cc..
....c...


예제 출력 2 
-1 0 1 2 3 4 5 6
-1 -1 -1 -1 -1 -1 -1 -1
-1 0 0 0 1 2 0 1
-1 -1 -1 -1 0 1 2 3
-1 -1 0 1 0 0 1 2
-1 -1 -1 -1 0 1 2 3

 */

int H, W;
char myMap[101][101];
int resMap[101][101];
int main() {

    ios::sync_with_stdio(0); cin.tie(0);

    /*
입력
입력은 1 + H 행으로 주어진다.

첫 번째 행에는 정수 H, W (1 ≦ H ≦ 100, 1 ≦ W ≦ 100) 가 공백을 사이에 주고 주어진다. 이것은 JOI시가 H × W 개의 작은 구역으로 나뉘어 있다는 것을 의미한다.

이어진 H 개의 행의 i번째 행 (1 ≦ i ≦ H) 에는 W문자의 문자열이 주어진다. 
W 개의 문자 중 j번째 문자 (1 ≦ j ≦ W) 는, 구역 (i, j) 에 지금 구름이 떠 있는지 아닌지를 나타낸다. 
구름이 있는 경우에는 영어 소문자 'c' 가, 
구름이 없는 경우에는 문자 '.' 가 주어진다.*/

    cin >> H >> W;
    
    for (int i = 1; i <= H; i++) {
        for (int j = 1; j <= W; j++) {
            cin >> myMap[i][j];
        }
    }

    for (int i = 1; i <= H; i++) {
        int value;
        int existC = 0;
        for (int j = 1; j <= W; j++) {
            if (myMap[i][j] == 'c') {
                existC = 1;//C가 있다고 기록
                value = 0;
                resMap[i][j] = value++;
            } else if (existC) {
                resMap[i][j] = value++;
            } else {
                resMap[i][j] = -1;
            }
        }
    }

    for (int i = 1; i <= H; i++) {
        for (int j = 1; j <= W; j++) {
            cout << resMap[i][j] << " ";
        }
        cout << "\n";
    }

    return 0;
}